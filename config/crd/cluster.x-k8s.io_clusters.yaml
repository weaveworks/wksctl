
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clusters.cluster.x-k8s.io
spec:
  preserveUnknownFields: false
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
    name: Phase
    type: string
  group: cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    shortNames:
    - cl
    singular: cluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Cluster is the Schema for the clusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster
          properties:
            clusterNetwork:
              description: Cluster network configuration.
              properties:
                apiServerPort:
                  description: APIServerPort specifies the port the API Server should
                    bind to. Defaults to 6443.
                  format: int32
                  type: integer
                pods:
                  description: The network ranges from which Pod networks are allocated.
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
                serviceDomain:
                  description: Domain name for services.
                  type: string
                services:
                  description: The network ranges from which service VIPs are allocated.
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
              type: object
            controlPlaneEndpoint:
              description: ControlPlaneEndpoint represents the endpoint used to communicate
                with the control plane.
              properties:
                host:
                  description: The hostname on which the API server is serving.
                  type: string
                port:
                  description: The port on which the API server is serving.
                  format: int32
                  type: integer
              required:
              - host
              - port
              type: object
            controlPlaneRef:
              description: ControlPlaneRef is an optional reference to a provider-specific
                resource that holds the details for provisioning the Control Plane
                for a Cluster.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            infrastructureRef:
              description: InfrastructureRef is a reference to a provider-specific
                resource that holds the details for provisioning infrastructure for
                a cluster in said provider.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            paused:
              description: Paused can be used to prevent controllers from processing
                the Cluster and all its associated objects.
              type: boolean
          type: object
        status:
          description: ClusterStatus defines the observed state of Cluster
          properties:
            controlPlaneInitialized:
              description: ControlPlaneInitialized defines if the control plane has
                been initialized.
              type: boolean
            controlPlaneReady:
              description: ControlPlaneReady defines if the control plane is ready.
              type: boolean
            failureDomains:
              additionalProperties:
                description: FailureDomainSpec is the Schema for Cluster API failure
                  domains. It allows controllers to understand how many failure domains
                  a cluster can optionally span across.
                properties:
                  attributes:
                    additionalProperties:
                      type: string
                    description: Attributes is a free form map of attributes an infrastructure
                      provider might use or require.
                    type: object
                  controlPlane:
                    description: ControlPlane determines if this failure domain is
                      suitable for use by control plane machines.
                    type: boolean
                type: object
              description: FailureDomains is a slice of failure domain objects synced
                from the infrastructure provider.
              type: object
            failureMessage:
              description: FailureMessage indicates that there is a fatal problem
                reconciling the state, and will be set to a descriptive error message.
              type: string
            failureReason:
              description: FailureReason indicates that there is a fatal problem reconciling
                the state, and will be set to a token value suitable for programmatic
                interpretation.
              type: string
            infrastructureReady:
              description: InfrastructureReady is the state of the infrastructure
                provider.
              type: boolean
            phase:
              description: Phase represents the current phase of cluster actuation.
                E.g. Pending, Running, Terminating, Failed etc.
              type: string
          type: object
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
